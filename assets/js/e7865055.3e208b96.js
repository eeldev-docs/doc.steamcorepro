"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5868],{1320:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"docfiles/multiplayer/sessions/leaving-multiplayer-session","title":"Leaving a Session or Server","description":"Learn how to disconnect a client from a session or dedicated server in Unreal Engine using the SteamCore PRO Destroy Session node.","source":"@site/docs/docfiles/multiplayer/sessions/leaving-session.md","sourceDirName":"docfiles/multiplayer/sessions","slug":"/docfiles/multiplayer/dedicated-servers/leaving-multiplayer-session","permalink":"/docfiles/multiplayer/dedicated-servers/leaving-multiplayer-session","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"leaving-multiplayer-session","title":"Leaving a Session or Server","description":"Learn how to disconnect a client from a session or dedicated server in Unreal Engine using the SteamCore PRO Destroy Session node.","slug":"/docfiles/multiplayer/dedicated-servers/leaving-multiplayer-session","sidebar_position":7},"sidebar":"steamCoreSidebar","previous":{"title":"Joining Multiplayer Games","permalink":"/docfiles/multiplayer/sessions/joining_multiplayer_games"},"next":{"title":"Custom Session Attributes","permalink":"/docfiles/multiplayer/sessions/custom-attributes"}}');var r=n(2467),t=n(8453);const o={id:"leaving-multiplayer-session",title:"Leaving a Session or Server",description:"Learn how to disconnect a client from a session or dedicated server in Unreal Engine using the SteamCore PRO Destroy Session node.",slug:"/docfiles/multiplayer/dedicated-servers/leaving-multiplayer-session",sidebar_position:7},l="Leaving a Session or Server",d={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Using the Destroy Session Node",id:"using-the-destroy-session-node",level:2},{value:"Steps",id:"steps",level:3},{value:"Example",id:"example",level:3},{value:"Steps in Blueprint",id:"steps-in-blueprint",level:3},{value:"Notes",id:"notes",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"leaving-a-session-or-server",children:"Leaving a Session or Server"})}),"\n",(0,r.jsxs)(s.p,{children:["This guide explains how to disconnect a client from a multiplayer session or dedicated server in Unreal Engine using ",(0,r.jsx)(s.strong,{children:"SteamCore PRO"}),". The primary method involves using the ",(0,r.jsx)(s.strong,{children:"Destroy Session"})," node to cleanly exit a session. This is essential for ensuring proper cleanup of session data and a smooth player experience."]}),"\n",(0,r.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"SteamCore PRO"})," installed in your Unreal Engine project."]}),"\n",(0,r.jsxs)(s.li,{children:["A client connected to a multiplayer session or dedicated server using ",(0,r.jsx)(s.strong,{children:"SteamCore PRO Sessions"}),", ",(0,r.jsx)(s.strong,{children:"SteamCoreSockets"}),", or ",(0,r.jsx)(s.strong,{children:"IpNetDriver"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Properly configured ",(0,r.jsx)(s.code,{children:"DefaultEngine.ini"})," for your networking setup (see ",(0,r.jsx)(s.a,{href:"/docfiles/multiplayer/configuring_steamsockets",children:"SteamCoreSockets Configuration"})," or ",(0,r.jsx)(s.a,{href:"/docfiles/additional/configuring_ipnetdriver",children:"IpNetDriver Setup"}),")."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"using-the-destroy-session-node",children:"Using the Destroy Session Node"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.strong,{children:"Destroy Session"})," node is used to disconnect a client from a multiplayer session or server. This node ensures that the session is properly terminated on the client side, freeing up resources and notifying the server."]}),"\n",(0,r.jsx)(s.h3,{id:"steps",children:"Steps"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Add the Destroy Session Node"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["In your client-side game logic (e.g., Game Instance, Player Controller, or Menu Blueprint), add the ",(0,r.jsx)(s.strong,{children:"Destroy Session"})," node."]}),"\n",(0,r.jsx)(s.li,{children:'This node is typically executed when the player chooses to leave the session (e.g., via a "Leave Game" button in the UI).'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Execute the Node"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Connect the ",(0,r.jsx)(s.strong,{children:"Destroy Session"})," node to the appropriate trigger in your game logic (e.g., a UI button press or game event)."]}),"\n",(0,r.jsx)(s.li,{children:"The node will handle the disconnection process, cleaning up the session data and notifying the server."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Handle Post-Disconnection Logic"}),":"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["After executing the ",(0,r.jsx)(s.strong,{children:"Destroy Session"})," node, redirect the player to a main menu, lobby, or another level as needed."]}),"\n",(0,r.jsx)(s.li,{children:"Optionally, display a confirmation message to the player indicating they have left the session."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(s.p,{children:["The following Blueprint demonstrates how to leave a session using the ",(0,r.jsx)(s.strong,{children:"Destroy Session"}),' node, triggered by a player action (e.g., clicking a "Leave Game" button).']}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Destroy Session Example",src:n(3485).A+"",width:"831",height:"456"})}),"\n",(0,r.jsx)(s.h3,{id:"steps-in-blueprint",children:"Steps in Blueprint"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Add a trigger event (e.g., a button press in your UI)."}),"\n",(0,r.jsxs)(s.li,{children:["Connect the event to the ",(0,r.jsx)(s.strong,{children:"Destroy Session"})," node."]}),"\n",(0,r.jsxs)(s.li,{children:["On successful execution, use the ",(0,r.jsx)(s.strong,{children:"Open Level"})," node to transition the player to a main menu or lobby level."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Client-Side Only"}),": The ",(0,r.jsx)(s.strong,{children:"Destroy Session"})," node is executed on the client to disconnect from the session. It does not affect the server or other connected clients."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Session Cleanup"}),": Ensure the ",(0,r.jsx)(s.strong,{children:"Destroy Session"})," node is called before transitioning to another level to avoid leaving orphaned session data."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Error Handling"}),": Add logic to handle cases where the session cannot be destroyed (e.g., due to network issues) and inform the player accordingly."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Production Use"}),': For a polished experience, provide clear UI feedback (e.g., a "Disconnecting..." message) while the session is being terminated.']}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"SteamCoreSockets and IpNetDriver"}),": The ",(0,r.jsx)(s.strong,{children:"Destroy Session"})," node is primarily designed for ",(0,r.jsx)(s.strong,{children:"SteamCore PRO Sessions"}),". For ",(0,r.jsx)(s.strong,{children:"SteamCoreSockets"})," or ",(0,r.jsx)(s.strong,{children:"IpNetDriver"}),", you may need to use alternative methods like the ",(0,r.jsx)(s.strong,{children:"Execute Console Command"})," node with ",(0,r.jsx)(s.code,{children:"disconnect"})," to leave the server."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Always test the disconnection process in a development environment to ensure proper cleanup and server-client communication."}),"\n",(0,r.jsx)(s.li,{children:"Implement UI feedback to inform players of the disconnection status (e.g., a loading screen or confirmation message)."}),"\n",(0,r.jsxs)(s.li,{children:["If using ",(0,r.jsx)(s.strong,{children:"SteamCore PRO Sessions"}),", ensure the session was properly created and joined before attempting to destroy it."]}),"\n",(0,r.jsx)(s.li,{children:"For games with frequent disconnections, consider adding reconnection logic or a retry mechanism in case of failures."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},3485:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/leave_server-ac3ba34392d0082ebcd613aa2619623b.png"},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var i=n(6540);const r={},t=i.createContext(r);function o(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);