"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7998],{2434:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"docfiles/multiplayer/dedicated-servers/connecting-to-server","title":"Connecting","description":"Learn how to connect to a dedicated server in Unreal Engine using SteamCore PRO sessions, SteamCoreSockets, or IpNetDriver.","source":"@site/docs/docfiles/multiplayer/dedicated-servers/connecting.md","sourceDirName":"docfiles/multiplayer/dedicated-servers","slug":"/docfiles/multiplayer/dedicated-servers/connecting","permalink":"/docfiles/multiplayer/dedicated-servers/connecting","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"connecting-to-server","title":"Connecting","description":"Learn how to connect to a dedicated server in Unreal Engine using SteamCore PRO sessions, SteamCoreSockets, or IpNetDriver.","slug":"/docfiles/multiplayer/dedicated-servers/connecting","sidebar_position":6},"sidebar":"steamCoreSidebar","previous":{"title":"Finding the Server","permalink":"/docfiles/multiplayer/dedicated-servers/finding-server"},"next":{"title":"Leaving a Session or Server","permalink":"/docfiles/multiplayer/dedicated-servers/leaving-session"}}');var r=s(2467),t=s(8453);const o={id:"connecting-to-server",title:"Connecting",description:"Learn how to connect to a dedicated server in Unreal Engine using SteamCore PRO sessions, SteamCoreSockets, or IpNetDriver.",slug:"/docfiles/multiplayer/dedicated-servers/connecting",sidebar_position:6},l="Connecting to a Dedicated Server",d={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Option 1: Using SteamCore PRO Sessions",id:"option-1-using-steamcore-pro-sessions",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Steps",id:"steps",level:3},{value:"Example",id:"example",level:3},{value:"Option 2: Using SteamCoreSockets (Bypassing Online Subsystem)",id:"option-2-using-steamcoresockets-bypassing-online-subsystem",level:2},{value:"Configuration",id:"configuration-1",level:3},{value:"Steps",id:"steps-1",level:3},{value:"Example",id:"example-1",level:3},{value:"Option 3: Using IpNetDriver (Bypassing Online Subsystem)",id:"option-3-using-ipnetdriver-bypassing-online-subsystem",level:2},{value:"Configuration",id:"configuration-2",level:3},{value:"Steps",id:"steps-2",level:3},{value:"Example",id:"example-2",level:3},{value:"Notes",id:"notes",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"connecting-to-a-dedicated-server",children:"Connecting to a Dedicated Server"})}),"\n",(0,r.jsxs)(n.p,{children:["This guide explains how to connect to a dedicated server in Unreal Engine using ",(0,r.jsx)(n.strong,{children:"SteamCore PRO"}),". The method depends on your ",(0,r.jsx)(n.code,{children:"DefaultEngine.ini"})," configuration and the networking driver in use. Three approaches are detailed below: ",(0,r.jsx)(n.strong,{children:"SteamCore PRO Sessions"}),", ",(0,r.jsx)(n.strong,{children:"SteamCoreSockets"}),", and ",(0,r.jsx)(n.strong,{children:"IpNetDriver"}),". For a visual walkthrough, see the ",(0,r.jsx)(n.a,{href:"/docfiles/videos/dedicated-server-ue5",children:"Video Tutorial"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SteamCore PRO"})," installed in your Unreal Engine project (for Steam-based methods)."]}),"\n",(0,r.jsxs)(n.li,{children:["Properly configured ",(0,r.jsx)(n.code,{children:"DefaultEngine.ini"})," for your chosen networking driver."]}),"\n",(0,r.jsx)(n.li,{children:"Access to the server\u2019s address (Steam P2P address or IP) and port."}),"\n",(0,r.jsx)(n.li,{children:"For production, implement a server browser to allow players to select from available servers."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"option-1-using-steamcore-pro-sessions",children:"Option 1: Using SteamCore PRO Sessions"}),"\n",(0,r.jsxs)(n.p,{children:["This method uses the ",(0,r.jsx)(n.strong,{children:"SteamCore Online Subsystem (OSS)"})," with the ",(0,r.jsx)(n.strong,{children:"SteamCoreSockets NetDriver"})," to find and join sessions. It\u2019s ideal for Steam-integrated multiplayer games."]}),"\n",(0,r.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Configure the ",(0,r.jsx)(n.strong,{children:"SteamCoreSockets NetDriver"})," as described in the ",(0,r.jsx)(n.a,{href:"/docfiles/multiplayer/configuring_steamsockets",children:"SteamCoreSockets Configuration Guide"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"steps",children:"Steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Add the ",(0,r.jsx)(n.strong,{children:"Find SteamCore PRO Sessions"})," node to your game logic (e.g., in a Game Instance or Menu Blueprint) to search for available servers."]}),"\n",(0,r.jsxs)(n.li,{children:["Use the ",(0,r.jsx)(n.strong,{children:"Join Session"})," node to connect to a selected session."]}),"\n",(0,r.jsx)(n.li,{children:"Handle the session results to allow players to choose a server (e.g., via a server browser UI)."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"The following Blueprint demonstrates connecting to the first available session. This is for demonstration only; in production, use a proper server list UI to let players select a server."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Join Session Example",src:s(7522).A+"",width:"1561",height:"485"})}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["This example automatically joins the ",(0,r.jsx)(n.strong,{children:"first session found"})," for simplicity. In production, implement a server browser to display all available sessions and allow players to choose. Refer to the Blueprint example project for a complete implementation."]})}),"\n",(0,r.jsx)(n.h2,{id:"option-2-using-steamcoresockets-bypassing-online-subsystem",children:"Option 2: Using SteamCoreSockets (Bypassing Online Subsystem)"}),"\n",(0,r.jsxs)(n.p,{children:["This method connects directly to a server using the ",(0,r.jsx)(n.strong,{children:"SteamCoreSockets NetDriver"})," without relying on the Steam Online Subsystem. It requires the server\u2019s Steam P2P address and port."]}),"\n",(0,r.jsx)(n.h3,{id:"configuration-1",children:"Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Set up the ",(0,r.jsx)(n.strong,{children:"SteamCoreSockets NetDriver"})," as outlined in the ",(0,r.jsx)(n.a,{href:"/docfiles/multiplayer/configuring_steamsockets",children:"SteamCoreSockets Configuration Guide"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"steps-1",children:"Steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.strong,{children:"Execute Console Command"})," node in your game logic."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Enter the console command in the format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"open steam.P2PAddr:Port\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replace ",(0,r.jsx)(n.code,{children:"P2PAddr"})," with the server\u2019s Steam P2P address."]}),"\n",(0,r.jsxs)(n.li,{children:["Replace ",(0,r.jsx)(n.code,{children:"Port"})," with the server\u2019s port number."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"The following Blueprint shows how to execute the console command to connect to a server using a Steam P2P address."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"SteamCoreSockets Connection Example",src:s(5797).A+"",width:"1680",height:"596"})}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsx)(n.p,{children:"This example is a basic demonstration and connects to a hardcoded server address. For production, implement a dynamic server list or user input for the address and port."})}),"\n",(0,r.jsx)(n.h2,{id:"option-3-using-ipnetdriver-bypassing-online-subsystem",children:"Option 3: Using IpNetDriver (Bypassing Online Subsystem)"}),"\n",(0,r.jsx)(n.p,{children:"This method connects to a server using a standard IP address and port, without requiring Steam integration. It\u2019s suitable for non-Steam servers or custom networking setups."}),"\n",(0,r.jsx)(n.h3,{id:"configuration-2",children:"Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Configure the ",(0,r.jsx)(n.strong,{children:"IpNetDriver"})," as described in the ",(0,r.jsx)(n.a,{href:"/docfiles/additional/configuring_ipnetdriver",children:"IpNetDriver Setup Guide"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"steps-2",children:"Steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.strong,{children:"Execute Console Command"})," node in your game logic."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Enter the console command in the format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"open <IP>:<Port>\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replace ",(0,r.jsx)(n.code,{children:"<IP>"})," with the server\u2019s IP address."]}),"\n",(0,r.jsxs)(n.li,{children:["Replace ",(0,r.jsx)(n.code,{children:"<Port>"})," with the server\u2019s port number."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-2",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"The following Blueprint demonstrates connecting to a server using an IP address and port."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"IpNetDriver Connection Example",src:s(6252).A+"",width:"1633",height:"600"})}),"\n",(0,r.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server Browser"}),": For a polished player experience, implement a server browser UI to list available servers and allow players to select one, rather than hardcoding or automatically joining the first session."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing"}),": Test connections in a development environment to ensure the server address, port, and networking driver are correctly configured."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SteamCoreSockets vs. IpNetDriver"}),": Use ",(0,r.jsx)(n.strong,{children:"SteamCoreSockets"})," for Steam-integrated servers and ",(0,r.jsx)(n.strong,{children:"IpNetDriver"})," for non-Steam or LAN-based servers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Handling"}),": Add logic to handle connection failures, such as invalid addresses or unavailable servers, to improve user experience."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},5797:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/dedicated_connect_sockets-ccdf7041bc4e6c3105471c5825226a1c.png"},6252:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/dedicated_connect_ip-c57979b9e70889f53e22124129d5c6df.png"},7522:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/dedicated_connect_join_session-c1bbb7514264c9a7c057fa8abf499659.png"},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);